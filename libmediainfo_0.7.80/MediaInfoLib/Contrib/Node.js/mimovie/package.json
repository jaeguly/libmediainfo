{
  "name": "mimovie",
  "description": "Wrapper around the `mediainfo' for obtaining information about movie and video files",
  "version": "0.1.7",
  "author": {
    "name": "Rodrigo Polo",
    "url": "http://rodrigopolo.com/"
  },
  "url": "http://github.com/rodrigopolo/mimovie",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/rodrigopolo/mimovie.git"
  },
  "keywords": [
    "mediainfo",
    "media",
    "audio",
    "video",
    "movie",
    "mkv",
    "m4v",
    "mp4",
    "mov",
    "avi"
  ],
  "main": "./lib/mimovie",
  "engines": {
    "node": ">=0.6.11"
  },
  "dependencies": {
  },
  "readme": "mimovie\n=======\n\nWrapper around the `mediainfo' for obtaining information about movie and video files\n\nOverview\n--------\n\nInspired by [node-mediainfo](https://github.com/deoxxa/node-mediainfo) this module provides an interface to the `mediainfo` command, it returns the common properties of a video or movie file in a JSON object.\n\nInstall\n--------\n\n```\nnpm install mimovie\n```\n\nUsage\n-----\n\nThe module exposes just one function, which has a signature of:\n\n`mimovie(\"/path/to/video_file\", callback)`\n\nThe callback function is called, in familiar node fashion, with two arguments.\nThe first is an Error object on error, or null on success. The second argument is an object with all the video/movie information as a JSON object.\n\nIt's really easier to just see the output, so here:\n\n```javascript\n{\n    video_tracks: [{\n        width: 1280,\n        height: 720,\n        codec: 'AVC',\n        fps: 23.976,\n        bitrate: 912222,\n        profile: 'High@L4.0',\n        aspect: '16:9'\n    }],\n    audio_tracks: [{\n        ch: 2,\n        ch_pos: 'Front: L R',\n        sammple_rate: 48000,\n        codec: 'AAC LC',\n        bitrate: 163836,\n        bitrate_mode: 'VBR',\n        lang: 'en'\n    }, {\n        ch: 6,\n        ch_pos: 'Front: L C R, Side: L R, LFE',\n        sammple_rate: 48000,\n        codec: 'AC3',\n        bitrate: 448000,\n        bitrate_mode: 'CBR',\n        lang: 'en'\n    }],\n    subtitles: ['es'],\n    bitrate: 1533377,\n    path: './test/movie.m4v',\n    size: 878363651,\n    duration: 4582635,\n    menu: false\n}\n```\n\nExample\n-------\n\n```javascript\nvar mimovie = require(\"mimovie\");\n\nmimovie(\"/path/to/movie.m4v\", function(err, res) {\n  if (err) {\n    return console.log(err);\n  }\n\n  console.log(res);\n});\n```\n\nRequirements\n------------\n\nThe `mediainfo` command has to be available somewhere in the PATH of the user node is running as.\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) by Rodrigo Polo http://rodrigopolo.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nContact\n-------\n\n* GitHub ([rodrigopolo](http://github.com/rodrigopolo/))\n* Twitter ([@rodrigopolo](http://twitter.com/rodrigopolo))",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rodrigopolo/mimovie/issues"
  }
}
